//noinspection DuplicatePlatformClasses
apply plugin: 'com.android.application'
def config = rootProject.ext //
def library = rootProject.ext.dependencies //
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

//    dexOptions {
//        jumboMode = true
//    }
    packagingOptions {
        pickFirst 'lib/armeabi/libRSSupport.so'
        pickFirst 'lib/armeabi/librsjni_androidx.so'
        pickFirst 'lib/armeabi/librsjni.so'
        pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        pickFirst 'lib/armeabi-v7a/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/librsjni.so'
        pickFirst 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/librsjni_androidx.so'
        pickFirst 'lib/x86_64/libRSSupport.so'
        pickFirst 'lib/x86_64/librsjni_androidx.so'
        pickFirst 'lib/x86_64/librsjni.so'
        pickFirst 'lib/x86/librsjni_androidx.so'
        pickFirst 'lib/x86/libRSSupport.so'
        pickFirst 'lib/x86/librsjni.so'

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    ndkVersion "22.1.7171670" // e.g.,  ndkVersion '21.3.6528147'
    compileSdk config.compileSdk

    defaultConfig {
        applicationId "com.fosung.lighthouse.myapplication"
        minSdk config.minSdk
        targetSdk config.targetSdk
        versionCode config.dengtaversionCode
        versionName config.dengtaversionName
        multiDexEnabled true
        renderscriptTargetApi 30
        renderscriptSupportModeEnabled true
        ndk {
            abiFilters 'arm64-v8a'
        }
    }
    flavorDimensions "keep"
    productFlavors {
        bxn_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.myapplication"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.myapplication",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.myapplication",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "灯塔VPN-线上",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
        bxnt_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.myapplication"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.myapplication",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.myapplication",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "灯塔VPN-测试",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
        bxny_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.myapplication"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.myapplication",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.myapplication",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "灯塔VPN-预生产",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
    }
    android.applicationVariants.all { variant ->
        def outputApkName = "app-${variant.flavorName}-release.apk"
        variant.outputs.all {
            outputFileName = outputApkName
        }
    }
    signingConfigs {
//        release {
//            storeFile file('./firebox_keystore.jks')
//            keyAlias 'haier'
//            keyPassword 'android'
//            storePassword 'android'
//        }
//        debug {
//            storeFile file('./firebox_keystore.jks')
//            keyAlias 'haier'
//            keyPassword 'android'
//            storePassword 'android'
//        }
        //TODO harmonybufen
        release {
            storeFile file('./../../releasekey/harmonyandroid.jks')
            keyAlias 'harmonyandroid'
            keyPassword 'HarmonyAndroid'
            storePassword 'HarmonyAndroid'
        }
        debug {
            storeFile file('./../../releasekey/harmonyandroid.jks')
            keyAlias 'harmonyandroid'
            keyPassword 'HarmonyAndroid'
            storePassword 'HarmonyAndroid'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':zfsjx-dengta20-fenzhi1:libFrame')
    // TODO 业务
//    implementation project(':zfsjx-dengta20-fenzhi1:libyewu1')
    // TODO 接口

}

// TODO Wallet打包
apply from: './multiple-channel.gradle'
// TODO mob
apply from: './../MobSDK.gradle'
